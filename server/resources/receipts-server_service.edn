{:activated-apis [:receipts-server/v1]
 :datomic-uri "datomic:mem://example"
 :descriptor
 ;; Datomic Schema Norms
 ;; --------------------
 {:vase/norms {:receipts/schema {:vase.norm/txes
                                 [#vase/schema-tx
                                  [[:receipts.category/name        :one  :string :identity "Category name"]
                                   [:receipts.category/description :one  :string :fulltext "Info about category"]

                                   [:receipts.vendor/name          :one  :string :identity "Vendor name"]
                                   [:receipts.vendor/description   :one  :string :fulltext "Description"]
                                   [:receipts.vendor/category      :many :string           "Category of this vendor"]

                                   [:receipts.user/name            :one  :string :unique   "User name"]
                                   [:receipts.user/abbrev          :one  :string :identity "Brief user name for Excel"]
                                   [:receipts.user/email           :one  :string :unique   "User email"]
                                   [:receipts.user/isSysAdmin      :one  :boolean          "User has full access"]
                                   [:receipts.user/isEditor        :one  :boolean          "User can add entries"]
                                   [:receipts.user/isConsumer      :one  :boolean          "User can be listed as purchaser"]

                                   [:receipts.paymentMethod/name   :one  :string :unique   "Payment method name"]
                                   [:receipts.paymentMethod/abbrev :one  :string :identity "Payment method name for Excel"]

                                   [:receipts.currency/name        :one  :string :unique   "Currency name"]
                                   [:receipts.currency/abbrev      :one  :string :identity "Brief currency name (e.g. USD or GBP)"]

                                   [:receipts.purchase/uid         :one  :string :identity "Unique id, based on user and time"]
                                   [:receipts.purchase/price       :one  :float            "Price"]
                                   [:receipts.purchase/currency    :one  :string           "Dollars, Shekels, etc."]
                                   [:receipts.purchase/category    :one  :string           "Categoory of purchase"]
                                   [:receipts.purchase/vendor      :one  :string           "Vendor where purchased"]
                                   [:receipts.purchase/paidBy      :one  :string           "Payment method ID"]
                                   [:receipts.purchase/date        :one  :instant          "When purchased"]
                                   [:receipts.purchase/comment     :one  :string :fulltext "Comment"]
                                   [:receipts.purchase/forWhom     :many :string           "For whom purchased"]]]}}

  ;; Global Specs for the API
  ;; ------------------------
  :vase/specs {}

  ;; API Tagged Chunks/Versions
  ;; --------------------------
  :vase/apis {:receipts-server/v1
              {:vase.api/routes
               {"/welcome" {:get #vase/respond {:name :receipts-server.v1/welcome-page
                                                :body "Welcome to the receipts server, v1.3"}}

                "/db" {:get #vase/query {:name :receipts-server.v1/db-page
                                         :params []
                                         :query [:find ?e ?v
                                                 :where [?e :db/ident ?v]]}}

                "/entities" {:get #vase/query {:name :receipts-server.v1/entities-get
                                            :query [:find (pull ?e [*])
                                                    :where (or [?e :receipts.user/name]
                                                               [?e :receipts.category/name]
                                                               [?e :receipts.vendor/name]
                                                               [?e :receipts.paymentMethod/name]
                                                               [?e :receipts.currency/name]
                                                               [?e :receipts.purchase/uid])]}}
                "/entity" {:delete #vase/transact {:name :receipts-server.v1/entity-delete
                                                   :db-op :vase/retract-entity
                                                   :properties [:db/id]}}

                "/users" {:get #vase/query {:name :receipts-server.v1/users-get
                                            :query [:find (pull ?e [*])
                                                    :where [?e :receipts.user/name]]}}
                "/user" {:get #vase/query {:name :receipts-server.v1/user-get
                                           :params [[email "n/a"] [name "n/a"] [abbrev "n/a"]]
                                           :query  [:find (pull ?e [*])
                                                    :in $ ?email ?name ?abbrev
                                                    :where
                                                    (or-join [?e ?email ?name ?abbrev]
                                                             [?e :receipts.user/email ?email]
                                                             [?e :receipts.user/name ?name]
                                                             [?e :receipts.user/abbrev ?abbrev])]}
                         :post #vase/transact {:name :receipts-server.v1/user-create
                                               :properties [:db/id
                                                            :receipts.user/name
                                                            :receipts.user/abbrev
                                                            :receipts.user/email
                                                            :receipts.user/isSysAdmin
                                                            :receipts.user/isEditor
                                                            :receipts.user/isConsumer]}}

                "/categories" {:get #vase/query {:name :receipts-server.v1/categories-get
                                                 :query [:find (pull ?e [*])
                                                         :where [?e :receipts.category/name]]}}
                "/category" {:get #vase/query {:name :receipts-server.v1/category-get
                                               :params [name]
                                               :query  [:find (pull ?e [*])
                                                        :in $ ?name
                                                        :where [?e :receipts.category/name ?name]]}
                             :post #vase/transact {:name :receipts-server.v1/category-create
                                                   :properties [:db/id
                                                                :receipts.category/name
                                                                :receipts.category/description]}}

                "/vendors" {:get #vase/query {:name :receipts-server.v1/vendors-get
                                                 :query [:find (pull ?e [*])
                                                         :where [?e :receipts.vendor/name]]}}
                "/vendor" {:get #vase/query {:name :receipts-server.v1/vendor-get
                                               :params [name]
                                               :query  [:find (pull ?e [*])
                                                        :in $ ?name
                                                        :where [?e :receipts.vendor/name ?name]]}
                             :post #vase/transact {:name :receipts-server.v1/vendor-create
                                                   :properties [:db/id
                                                                :receipts.vendor/name
                                                                :receipts.vendor/description
                                                                :receipts.vendor/category]}}


                "/paymentMethods" {:get #vase/query {:name :receipts-server.v1/paymentMethods-get
                                                     :params []
                                                     :query [:find ?e ?name ?abbrev
                                                             :where
                                                             [?e :receipts.paymentMethod/name ?name]
                                                             [?e :receipts.paymentMethod/abbrev ?abbrev]]}}

                "/paymentMethod" {:get #vase/query {:name :receipts-server.v1/paymentMethod-get
                                                    :params [name]
                                                    :query [:find ?e ?name
                                                            :in $ ?name
                                                            :where
                                                            [?e :receipts.paymentMethod/name ?name]]}
                                  :post #vase/transact {:name :receipts-server.v1/paymentMethod-create
                                                        :properties [:db/id
                                                                     :receipts.paymentMethod/name
                                                                     :receipts.paymentMethod/abbrev]}}

                "/currencies" {:get #vase/query {:name :receipts-server.v1/currencies-get
                                                 :params []
                                                 :query [:find (pull ?e [*])
                                                         :where [?e :receipts.currency/name]]}}

                "/currency" {:get #vase/query {:name :receipts-server.v1/currency-get
                                               :params [[name "n/a"] [abbrev "n/a"]]
                                               :query [:find (pull ?e [*])
                                                       :in $ ?name ?abbrev
                                                       :where
                                                       (or-join [?e ?name ?abbrev]
                                                                [?e :receipts.currency/name ?name]
                                                                [?e :receipts.currency/abbrev ?abbrev])]}
                             :post #vase/transact {:name :receipts-server.v1/currency-create
                                                   :properties [:db/id
                                                                :receipts.currency/name
                                                                :receipts.currency/abbrev]}}

                "/purchases" {:get #vase/query {:name :receipts-server.v1/purchases-get
                                                :params []
                                                :query [:find (pull ?e [*])
                                                        :where [?e :receipts.purchase/uid]]}}

                "/purchase" {:get #vase/query {:name :receipts-server.v1/purchase-get
                                               :params [[uid "n/a"] [price "n/a"] [currency "n/a"]
                                                        [category "n/a"] [vendor "n/a"] [paidBy "n/a"]
                                                        [date "n/a"] [comment "n/a"] [forWhom "n/a"]]
                                               :edn-coerce [date]
                                               :query [:find (pull ?e [*])
                                                       :in $ ?uid ?price ?currency ?category ?vendor ?paidBy ?date ?comment ?forWhom
                                                       :where
                                                       (or-join [?e ?uid ?price ?currency ?category ?vendor
                                                                 ?paid-by ?date ?comment ?for-whom]
                                                                [?e :receipts.purchase/uid ?uid]
                                                                [?e :receipts.purchase/price ?price]
                                                                [?e :receipts.purchase/currency ?currency]
                                                                [?e :receipts.purchase/category ?category]
                                                                [?e :receipts.purchase/vendor ?vendor]
                                                                [?e :receipts.purchase/paidBy ?by]
                                                                [?e :receipts.purchase/date ?date]
                                                                [?e :receipts.purchase/comment ?comment]
                                                                [?e :receipts.purchase/forWhom ?for-whom])]}
                             :post [receipts-server.interceptors/date-conversion
                                    #vase/transact {:name :receipts-server.v1/purchase-create
                                                    :properties [:db/id
                                                                 :receipts.purchase/uid
                                                                 :receipts.purchase/price
                                                                 :receipts.purchase/currency
                                                                 :receipts.purchase/category
                                                                 :receipts.purchase/vendor
                                                                 :receipts.purchase/paid-by
                                                                 :receipts.purchase/date
                                                                 :receipts.purchase/comment
                                                                 :receipts.purchase/for-whom ]}]}

                "/capture" {:get #vase/respond {:name :example.v1/url-param-example
                                                :params [date]
                                                :edn-coerce [date]
                                                :body (str "You said: " date " which is a " (type date))}}


                }
               :vase.api/schemas [:receipts/schema]
               :vase.api/forward-headers ["vaserequest-id"]}}}}

